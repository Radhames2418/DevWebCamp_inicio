{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenHora","busqueda","categoria_id","value","dia","terminoBusqueda","e","target","name","Object","values","includes","async","url","resultado","fetch","json","forEach","hora","addEventListener","seleccionarHora","buscarEventos","horaPrevia","classList","remove","add","dataset","horaId","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","filter","actualizarInputHidden","params","toString","split","keyCode","trim","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,MAAAC,EAAAF,SAAAC,cAAA,yBACAE,EAAAH,SAAAI,iBAAA,gBAEAC,GADAL,SAAAC,cAAA,mBACAD,SAAAC,cAAA,qBAGA,IAAAK,EAAA,CACAC,aAAAL,EAAAM,MACAC,IAAA,IAMA,SAAAC,EAAAC,GACAL,EAAAK,EAAAC,OAAAC,MAAAF,EAAAC,OAAAJ,MACAM,OAAAC,OAAAT,GAAAU,SAAA,KAMAC,iBAEA,MAAAR,IAAAA,EAAAF,aAAAA,GAAAD,EACAY,EAAA,gCAAAT,kBAAAF,IACAY,QAAAC,MAAAF,SACAC,EAAAE,OAMArB,SAAAI,iBAAA,aAEAkB,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,KAjBAC,GAqBA,SAAAD,EAAAd,GAEA,MAAAgB,EAAA3B,SAAAC,cAAA,8BACA0B,GACAA,EAAAC,UAAAC,OAAA,6BAGAlB,EAAAC,OAAAgB,UAAAE,IAAA,6BACAzB,EAAAG,MAAAG,EAAAC,OAAAmB,QAAAC,OArCA9B,EAAAsB,iBAAA,SAAAd,GACAP,EAAAmB,QAAAb,GAAAA,EAAAe,iBAAA,SAAAd,KAhBA,GCAA,MACA,MAAAuB,EAAAjC,SAAAC,cAAA,eACA,GAAAgC,EAAA,CAEA,MAAAC,EAAAlC,SAAAC,cAAA,SACAkC,EAAAnC,SAAAC,cAAA,iBAEA,IAAAmC,EAAA,GA0BA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAd,QAAAiB,IACA,MAAAC,EAAAxC,SAAAyC,cAAA,MACAD,EAAAZ,UAAAE,IAAA,mBACAU,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAIA,SAAAG,EAAAhC,GACAA,EAAAC,OAAAiB,SACAO,EAAAA,EAAAS,OAAAN,GAAAA,IAAA5B,EAAAC,OAAA0B,aACAQ,IAIA,SAAAA,EAAAC,GACAZ,EAAA3B,MAAA4B,EAAAY,WA3CA,KAAAb,EAAA3B,QACA4B,EAAAD,EAAA3B,MAAAyC,MAAA,KACAZ,KAKAJ,EAAAT,iBAAA,YAGA,SAAAb,GACA,GAAA,KAAAA,EAAAuC,QAAA,CACA,GAAA,KAAAvC,EAAAC,OAAAJ,MAAA2C,QAAAxC,EAAAC,OAAAJ,MAAA,EACA,OAEAG,EAAAyC,iBACAhB,EAAA,IAAAA,EAAAzB,EAAAC,OAAAJ,MAAA2C,QACAlB,EAAAzB,MAAA,GACA6B,IAGAS,SA9BA","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n\r\n        let busqueda = {\r\n            categoria_id: categoria.value,\r\n            dia: ''\r\n        }\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horarios?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            ObtenerHorasDisponibles()\r\n        }\r\n\r\n        function ObtenerHorasDisponibles() {\r\n            const horasDisponibles = document.querySelectorAll('#horas li');\r\n\r\n            horasDisponibles.forEach(hora => {\r\n                hora.addEventListener('click', seleccionarHora)\r\n            });\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n        }\r\n    }\r\n})();","(() => {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    if (tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n        //Recuperar los tags\r\n        if (tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        \r\n        //Escuchar los cambios en los input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        \r\n        function guardarTag(e) {\r\n            if (e.keyCode === 44) {\r\n                if (e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()]\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag')\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n\r\n        function actualizarInputHidden(params) {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})();\r\n"]}