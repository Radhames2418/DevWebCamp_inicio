{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","busqueda","categoria_id","value","dia","terminoBusqueda","e","target","name","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadosHoras","forEach","li","add","horasTomadas","map","evento","hora_id","horasDisponibles","Array","from","filter","dataset","horaId","horasNoDisponibles","hora","removeEventListener","seleccionarHora","addEventListener","ObtenerHorasDisponibles","json","buscarEventos","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","params","toString","split","keyCode","trim","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,MAAAC,EAAAF,SAAAC,cAAA,yBACAE,EAAAH,SAAAI,iBAAA,gBACAC,EAAAL,SAAAC,cAAA,mBACAK,EAAAN,SAAAC,cAAA,oBAEA,IAAAM,EAAA,CACAC,aAAAN,EAAAO,MACAC,IAAA,IAMA,SAAAC,EAAAC,GACAL,EAAAK,EAAAC,OAAAC,MAAAF,EAAAC,OAAAJ,MAGAH,EAAAG,MAAA,GACAJ,EAAAI,MAAA,GACA,MAAAM,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAGAC,OAAAC,OAAAZ,GAAAa,SAAA,KAMAC,iBAEA,MAAAX,IAAAA,EAAAF,aAAAA,GAAAD,EACAe,EAAA,gCAAAZ,kBAAAF,IACAe,QAAAC,MAAAF,IAMA,SAAAG,GAEA,MAAAC,EAAA1B,SAAAI,iBAAA,aACAsB,EAAAC,QAAAC,GAAAA,EAAAZ,UAAAa,IAAA,+BAGA,MAAAC,EAAAL,EAAAM,IAAAC,GAAAA,EAAAC,SAEAC,EADAC,MAAAC,KAAAV,GACAW,OAAAT,IAAAE,EAAAV,SAAAQ,EAAAU,QAAAC,SAEAC,EAAAxC,SAAAI,iBAAA,+BACA+B,MAAAC,KAAAI,GAAAT,IAAAU,IACAA,EAAAC,oBAAA,QAAAC,KAGAT,EAAAP,QAAAc,IACAA,EAAAzB,UAAAC,OAAA,8BACAwB,EAAAG,iBAAA,QAAAD,KApBAE,OAFAtB,EAAAuB,QARAC,GAkCA,SAAAJ,EAAA/B,GAEA,MAAAG,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAGAL,EAAAC,OAAAG,UAAAa,IAAA,6BACAvB,EAAAG,MAAAG,EAAAC,OAAAyB,QAAAC,OAGAlC,EAAAI,MAAAT,SAAAC,cAAA,wBAAAQ,MA9DAP,EAAA0C,iBAAA,SAAAjC,GACAR,EAAAwB,QAAAjB,GAAAA,EAAAkC,iBAAA,SAAAjC,KAfA,GCAA,MACA,MAAAqC,EAAAhD,SAAAC,cAAA,eACA,GAAA+C,EAAA,CAEA,MAAAC,EAAAjD,SAAAC,cAAA,SACAiD,EAAAlD,SAAAC,cAAA,iBAEA,IAAAkD,EAAA,GA0BA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAxB,QAAA2B,IACA,MAAAC,EAAAvD,SAAAwD,cAAA,MACAD,EAAAvC,UAAAa,IAAA,mBACA0B,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAIA,SAAAG,EAAA9C,GACAA,EAAAC,OAAAI,SACAkC,EAAAA,EAAAd,OAAAiB,GAAAA,IAAA1C,EAAAC,OAAAwC,aACAO,IAIA,SAAAA,EAAAC,GACAX,EAAAzC,MAAA0C,EAAAW,WA3CA,KAAAZ,EAAAzC,QACA0C,EAAAD,EAAAzC,MAAAsD,MAAA,KACAX,KAKAJ,EAAAJ,iBAAA,YAGA,SAAAhC,GACA,GAAA,KAAAA,EAAAoD,QAAA,CACA,GAAA,KAAApD,EAAAC,OAAAJ,MAAAwD,QAAArD,EAAAC,OAAAJ,MAAA,EACA,OAEAG,EAAAsD,iBACAf,EAAA,IAAAA,EAAAvC,EAAAC,OAAAJ,MAAAwD,QACAjB,EAAAvC,MAAA,GACA2C,IAGAQ,SA9BA","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        let busqueda = {\r\n            categoria_id: categoria.value,\r\n            dia: ''\r\n        }\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //Reiniciar campos ocultos\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n\r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horarios?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            \r\n            ObtenerHorasDisponibles(eventos)\r\n        }\r\n\r\n        function ObtenerHorasDisponibles(eventos) {\r\n            //reiniciar las horas\r\n            const listadosHoras = document.querySelectorAll('#horas li');\r\n            listadosHoras.forEach(li => li.classList.add(\"horas__hora--deshabilitada\"));\r\n\r\n            //Comprar eventos ya tomados\r\n            const horasTomadas = eventos.map( evento => evento.hora_id );\r\n            const listadosHorasArray = Array.from(listadosHoras);\r\n            const horasDisponibles = listadosHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\r\n\r\n            const horasNoDisponibles = document.querySelectorAll('.horas__hora--deshabilitada');\r\n            Array.from(horasNoDisponibles).map(hora => {\r\n                            hora.removeEventListener('click', seleccionarHora);\r\n            })  \r\n\r\n            horasDisponibles.forEach(hora => {\r\n                hora.classList.remove('horas__hora--deshabilitada');\r\n                hora.addEventListener('click', seleccionarHora)\r\n            });\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //llenar el campo  oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n        }\r\n    }\r\n})();","(() => {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    if (tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n        //Recuperar los tags\r\n        if (tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        \r\n        //Escuchar los cambios en los input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        \r\n        function guardarTag(e) {\r\n            if (e.keyCode === 44) {\r\n                if (e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()]\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag')\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n\r\n        function actualizarInputHidden(params) {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})();\r\n"]}