{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","Object","values","includes","async","buscarEventos","id","horaSeleccionada","classList","remove","add","onclick","seleccionarHora","iniciarApp","e","target","name","horaPrevia","url","resultado","fetch","eventos","listadosHoras","li","horasTomadas","map","evento","hora_id","horasDisponibles","Array","from","filter","dataset","horaId","horasNoDisponibles","hora","removeEventListener","ObtenerHorasDisponibles","json","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","obtenerPonentes","then","arrayPonentes","nombre","trim","apellido","formatearPonentes","length","expresion","RegExp","toLocaleLowerCase","search","firstChild","removeChild","limpiarPonentes","ponenteHtml","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","params","toString","split","keyCode","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,MAAAC,EAAAF,SAAAC,cAAA,yBACAE,EAAAH,SAAAI,iBAAA,gBACAC,EAAAL,SAAAC,cAAA,mBACAK,EAAAN,SAAAC,cAAA,oBAEAC,EAAAK,iBAAA,SAAAC,GACAL,EAAAM,QAAAC,GAAAA,EAAAH,iBAAA,SAAAC,IAEA,IAAAG,EAAA,CACAC,aAAAV,EAAAW,OAAA,GACAH,IAAAL,EAAAQ,OAAA,IAGA,IAAAC,OAAAC,OAAAJ,GAAAK,SAAA,IAAA,EACAC,uBACAC,IAEA,MAAAC,EAAAb,EAAAO,MAEAO,EAAApB,SAAAC,cAAA,kBAAAkB,OACAC,EAAAC,UAAAC,OAAA,8BACAF,EAAAC,UAAAE,IAAA,6BACAH,EAAAI,QAAAC,EAGAC,GAGA,SAAAlB,EAAAmB,GACAhB,EAAAgB,EAAAC,OAAAC,MAAAF,EAAAC,OAAAf,MAGAP,EAAAO,MAAA,GACAR,EAAAQ,MAAA,GACA,MAAAiB,EAAA9B,SAAAC,cAAA,8BACA6B,GACAA,EAAAT,UAAAC,OAAA,6BAGAR,OAAAC,OAAAJ,GAAAK,SAAA,KAGAE,IAGAD,eAAAC,IAEA,MAAAR,IAAAA,EAAAE,aAAAA,GAAAD,EACAoB,EAAA,gCAAArB,kBAAAE,IACAoB,QAAAC,MAAAF,IAMA,SAAAG,GAEA,MAAAC,EAAAnC,SAAAI,iBAAA,aACA+B,EAAA1B,QAAA2B,GAAAA,EAAAf,UAAAE,IAAA,+BAGA,MAAAc,EAAAH,EAAAI,IAAAC,GAAAA,EAAAC,SAEAC,EADAC,MAAAC,KAAAR,GACAS,OAAAR,IAAAC,EAAArB,SAAAoB,EAAAS,QAAAC,SAEAC,EAAA/C,SAAAI,iBAAA,+BACAsC,MAAAC,KAAAI,GAAAT,IAAAU,IACAA,EAAAC,oBAAA,QAAAxB,KAGAgB,EAAAhC,QAAAuC,IACAA,EAAA3B,UAAAC,OAAA,8BACA0B,EAAAzC,iBAAA,QAAAkB,KApBAyB,OAFAlB,EAAAmB,QA0BA,SAAA1B,EAAAE,GAEA,MAAAG,EAAA9B,SAAAC,cAAA,8BACA6B,GACAA,EAAAT,UAAAC,OAAA,6BAGAK,EAAAC,OAAAP,UAAAE,IAAA,6BACAjB,EAAAO,MAAAc,EAAAC,OAAAiB,QAAAC,OAGAzC,EAAAQ,MAAAb,SAAAC,cAAA,wBAAAY,QA3FA,GCAA,WACA,MAAAuC,EAAApD,SAAAC,cAAA,aAEA,GAAAmD,EAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GACA,MAAAC,EAAAvD,SAAAC,cAAA,qBACAuD,EAAAxD,SAAAC,cAAA,uBAkGA,SAAAwD,EAAA9B,GACA,MAAA+B,EAAA/B,EAAAC,OAEA+B,EAAA3D,SAAAC,cAAA,4CACA0D,GACAA,EAAAtC,UAAAC,OAAA,2CAGAoC,EAAArC,UAAAE,IAAA,2CAEAiC,EAAA3C,MAAA6C,EAAAb,QAAAe,WArFA3C,iBACA,MACA4C,QAAA5B,MADA,iBAEA,aAAA4B,EAAAV,QAxBAW,GAAAC,KAAA/B,KAiCA,SAAAgC,EAAA,IAEAX,EAAAW,EAAA1B,IAAAoB,IACA,CACAO,OAAA,GAAAP,EAAAO,OAAAC,UAAAR,EAAAS,SAAAD,SACA/C,GAAAuC,EAAAvC,MArCAiD,CAAApC,KAGAoB,EAAA7C,iBAAA,SAwCA,SAAAoB,GAEA,MAAAhB,EAAAgB,EAAAC,OAAAf,MACA,GAAAF,EAAA0D,OAAA,EACA,CACA,MAAAC,EAAA,IAAAC,OAAA5D,EAAA,KACA2C,EAAAD,EAAAT,OAAAc,IACA,IAAA,IAAAA,EAAAO,OAAAO,oBAAAC,OAAAH,GAEA,OAAAZ,SAKAJ,EAAA,IAMA,WAGA,GAoBA,WAIA,KAAAC,EAAAmB,YACAnB,EAAAoB,YAAApB,EAAAmB,YA3BAE,GAEAtB,EAAAe,OAAA,EACAf,EAAA7C,QAAAiD,IACA,MAAAmB,EAAA7E,SAAA8E,cAAA,MACAD,EAAAxD,UAAAE,IAAA,6BACAsD,EAAAE,YAAArB,EAAAO,OACAY,EAAAhC,QAAAe,UAAAF,EAAAvC,GAEA0D,EAAArD,QAAAiC,EAEAF,EAAAyB,YAAAH,SAEA,CACA,MAAAI,EAAAjF,SAAA8E,cAAA,KACAG,EAAA5D,UAAAE,IAAA,iCACA0D,EAAAF,YAAA,oCACAxB,EAAAyB,YAAAC,IArBAC,MAvDA1B,EAAA3C,OACA,YAoBAI,eAAAE,GACA,MAAAY,EAAA,mBAAAZ,EACA0C,QAAA5B,MAAAF,GACA,aAAA8B,EAAAV,QAtBAgC,CAAA3B,EAAA3C,OAAAkD,KAAAL,IAEA,MAAA0B,EAAApF,SAAA8E,cAAA,MACAM,EAAA/D,UAAAE,IAAA,4BAAA,2CACA6D,EAAAL,YAAA,GAAArB,EAAAO,UAAAP,EAAAS,WAEAZ,EAAAyB,YAAAI,MAPA,IAhBA,GCAA,MACA,MAAAC,EAAArF,SAAAC,cAAA,eACA,GAAAoF,EAAA,CAEA,MAAAC,EAAAtF,SAAAC,cAAA,SACAsF,EAAAvF,SAAAC,cAAA,iBAEA,IAAAuF,EAAA,GA0BA,SAAAC,IACAH,EAAAP,YAAA,GACAS,EAAA/E,QAAAiF,IACA,MAAAC,EAAA3F,SAAA8E,cAAA,MACAa,EAAAtE,UAAAE,IAAA,mBACAoE,EAAAZ,YAAAW,EACAC,EAAAC,WAAAC,EACAP,EAAAN,YAAAW,KAIA,SAAAE,EAAAlE,GACAA,EAAAC,OAAAN,SACAkE,EAAAA,EAAA5C,OAAA8C,GAAAA,IAAA/D,EAAAC,OAAAmD,aACAe,IAIA,SAAAA,EAAAC,GACAR,EAAA1E,MAAA2E,EAAAQ,WA3CA,KAAAT,EAAA1E,QACA2E,EAAAD,EAAA1E,MAAAoF,MAAA,KACAR,KAKAJ,EAAA9E,iBAAA,YAGA,SAAAoB,GACA,GAAA,KAAAA,EAAAuE,QAAA,CACA,GAAA,KAAAvE,EAAAC,OAAAf,MAAAqD,QAAAvC,EAAAC,OAAAf,MAAA,EACA,OAEAc,EAAAwE,iBACAX,EAAA,IAAAA,EAAA7D,EAAAC,OAAAf,MAAAqD,QACAmB,EAAAxE,MAAA,GACA4E,IAGAK,SA9BA","file":"bundle.js","sourcesContent":["(function () {\n    const horas = document.querySelector('#horas');\n\n    if (horas) {\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda);\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\n\n        let busqueda = {\n            categoria_id: categoria.value ?? '',\n            dia: inputHiddenDia.value ?? ''\n        }\n\n        if (!Object.values(busqueda).includes('')) {\n            async function iniciarApp() {\n                await buscarEventos();\n\n                const id = inputHiddenHora.value;\n                //Resaltar la hora actual\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\n                horaSeleccionada.onclick = seleccionarHora;\n            }\n\n            iniciarApp();\n        }\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n\n            //Reiniciar campos ocultos\n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if (horaPrevia) {\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\n            }\n\n            if (Object.values(busqueda).includes('')) {\n                return;\n            }\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n\n            const { dia, categoria_id } = busqueda;\n            const url = `/api/eventos-horarios?dia_id=${dia}&categoria_id=${categoria_id}`;\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n            \n            ObtenerHorasDisponibles(eventos)\n        }\n\n        function ObtenerHorasDisponibles(eventos) {\n            //reiniciar las horas\n            const listadosHoras = document.querySelectorAll('#horas li');\n            listadosHoras.forEach(li => li.classList.add(\"horas__hora--deshabilitada\"));\n\n            //Comprar eventos ya tomados\n            const horasTomadas = eventos.map( evento => evento.hora_id );\n            const listadosHorasArray = Array.from(listadosHoras);\n            const horasDisponibles = listadosHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\n\n            const horasNoDisponibles = document.querySelectorAll('.horas__hora--deshabilitada');\n            Array.from(horasNoDisponibles).map(hora => {\n                            hora.removeEventListener('click', seleccionarHora);\n            })  \n\n            horasDisponibles.forEach(hora => {\n                hora.classList.remove('horas__hora--deshabilitada');\n                hora.addEventListener('click', seleccionarHora)\n            });\n        }\n\n        function seleccionarHora(e) {\n\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if (horaPrevia) {\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\n            }\n\n            e.target.classList.add(\"horas__hora--seleccionada\");\n            inputHiddenHora.value = e.target.dataset.horaId;\n\n            //llenar el campo  oculto de dia\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\n        }\n    }\n})();","(function () {\n    const ponentesInput = document.querySelector('#ponentes');\n\n    if (ponentesInput){\n        let ponentes = [];\n        let ponentesFiltrados = [];\n        const listadoPonentes = document.querySelector('#listado-ponentes');\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\n\n        obtenerPonentes().then((resultado)=> {\n            formatearPonentes(resultado);\n        });\n\n        ponentesInput.addEventListener('input', buscarPonentes);\n\n        if (ponenteHidden.value){\n            (async ()=>{\n                obtenerPonente(ponenteHidden.value).then((ponente)=>{\n                   // Insertar en el HTML\n                    const ponenteDOM = document.createElement('LI');\n                    ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\n                    ponenteDOM.textContent = `${ponente.nombre} ${ponente.apellido}`;\n\n                    listadoPonentes.appendChild(ponenteDOM);\n\n                });\n\n            })()\n        }\n\n        async function obtenerPonentes(){\n            const url = `/api/ponentes`;\n            const respuesta = await fetch(url);\n            return await respuesta.json();\n        }\n\n        async function obtenerPonente(id){\n            const url = `/api/ponente?id=${id}`;\n            const respuesta = await fetch(url);\n            return await respuesta.json();\n        }\n\n        function formatearPonentes(arrayPonentes = [])\n        {\n            ponentes = arrayPonentes.map( ponente => {\n                return{\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                    id: ponente.id\n                }\n            })\n\n        }\n\n        function buscarPonentes(e)\n        {\n            const busqueda = e.target.value;\n            if (busqueda.length > 3)\n            {\n                const expresion = new RegExp(busqueda, \"i\");\n                ponentesFiltrados = ponentes.filter( ponente => {\n                    if (ponente.nombre.toLocaleLowerCase().search(expresion) !== -1)\n                    {\n                        return ponente;\n                    }\n\n                })\n            } else {\n                ponentesFiltrados = [];\n            }\n\n            mostrarPonentes();\n        }\n\n        function mostrarPonentes() {\n            limpiarPonentes();\n\n            if (ponentesFiltrados.length > 0){\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHtml = document.createElement('LI');\n                    ponenteHtml.classList.add('listado-ponentes__ponente');\n                    ponenteHtml.textContent = ponente.nombre;\n                    ponenteHtml.dataset.ponenteId = ponente.id;\n\n                    ponenteHtml.onclick = seleccionarPonente;\n\n                    listadoPonentes.appendChild(ponenteHtml);\n                })\n            } else {\n                const noResultados = document.createElement('P');\n                noResultados.classList.add('listado-ponente__no-resultado');\n                noResultados.textContent = 'No hay resultado para tu búsqueda';\n                listadoPonentes.appendChild(noResultados);\n            }\n\n        }\n\n        function limpiarPonentes() {\n            /**\n             * Forma de limpiar de maneraCorrecta\n             */\n            while (listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\n            }\n        }\n\n        function seleccionarPonente(e) {\n            const ponente = e.target;\n            // Remover la clase previa\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\n            if (ponentePrevio){\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\n            }\n\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\n\n            ponenteHidden.value = ponente.dataset.ponenteId;\n\n        }\n    }\n\n})();","(() => {\n    const tagsInput = document.querySelector('#tags_input');\n    if (tagsInput) {\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n        //Recuperar los tags\n        if (tagsInputHidden.value !== '') {\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        \n        //Escuchar los cambios en los input\n        tagsInput.addEventListener('keypress', guardarTag);\n\n        \n        function guardarTag(e) {\n            if (e.keyCode === 44) {\n                if (e.target.value.trim() === '' || e.target.value < 1) {\n                    return;\n                }\n                e.preventDefault();\n                tags = [...tags, e.target.value.trim()]\n                tagsInput.value = '';\n                mostrarTags();\n            }\n\n            actualizarInputHidden();\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag')\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag;\n                tagsDiv.appendChild(etiqueta);\n            });\n        }\n\n        function eliminarTag(e) {\n            e.target.remove();\n            tags = tags.filter(tag => tag !== e.target.textContent);\n            actualizarInputHidden();\n        }\n\n\n        function actualizarInputHidden(params) {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n})();\n"]}